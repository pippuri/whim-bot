language: node_js
node_js:
- 4.3.2
before_install:
- if [[ `npm -v` != 3.9.6* ]]; then npm i  -g npm@3.9.6; fi
- npm --version
before_script:
- export AWS_PROFILE=travis
- mkdir ~/.aws && touch ~/.aws/credentials # create .aws folder with placeholder credentials file
- echo '[profile travis]\nregion=eu-west-1' > ~/.aws/config # create .aws config file with default region

# populate credential file by decrypt .secret-aws-travis / .secret-aws-travis-pullrequests
- if [[ $TRAVIS_PULL_REQUEST =~ ^[0-9]+$ ]]; then openssl aes-256-cbc -pass "pass:$TRAVIS_CI_SECRET_PULLREQUESTS" -in ./.secret-aws-travis-pullrequests -out ~/.aws/credentials -d -a && echo "I ran"; fi # When travis run PR
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then openssl aes-256-cbc -pass "pass:$TRAVIS_CI_SECRET" -in ./.secret-aws-travis-branch -out ~/.aws/credentials -d -a && echo "I ran"; fi # When travis run branch

- sls function autoinstall -a

# get variable from s3 test file -> continuous deployment to test stage
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then if [[ $TRAVIS_BRANCH == "master" ]]; then echo '{}' > _meta/variables/s-variables-test.json && sls meta sync -s test -f; fi fi

# get variable from s3 alpha file -> alpha stage
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then if [[ $TRAVIS_BRANCH == "alpha" ]]; then echo '{}' > _meta/variables/s-variables-alpha.json && sls meta sync -s alpha -f; fi fi

# get variable from s3 test file -> for PRs
- if [[ $TRAVIS_PULL_REQUEST =~ ^[0-9]+$ ]]; then echo '{}' > _meta/variables/s-variables-test.json && sls meta sync -s test -f; fi

# no script for prod meta sync, as travis is not suppose to auto deploy prod



script:
- npm test
after_success:

# Current time
- d=$(date) && export CURRENT_TIMESTAMP="$d" && echo $CURRENT_TIMESTAMP

# Creating Tag
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then if [[ $TRAVIS_BRANCH == "master" ]]; then export NPM_PACKAGE_VERSION=$(node -p -e "require('./package.json').version") && export RELEASE_TAG="$NPM_PACKAGE_VERSION-$SERVERLESS_STAGE-$TRAVIS_BUILD_NUMBER"; fi fi

# Auto deploy to "test" stage on master branch
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then if [[ $TRAVIS_BRANCH == "master" ]]; then npm run deploy-test:all && cd ./scripts && SERVERLESS_STAGE=test knex migrate:latest; fi fi

# Auto deploy to "alpha" stage on alpha branch with release tag
- if [[ $TRAVIS_PULL_REQUEST == "false" ]]; then if [[ $TRAVIS_BRANCH == "alpha" ]]; then npm run deploy-alpha:all && cd ./scripts && SERVERLESS_STAGE=alpha knex migrate:latest && git tag -a $RELEASE_TAG -m "$CURRENT_TIMESTAMP"; fi fi
env:
  global:
    - TRAVIS_CI_SECRET_PULLREQUESTS=b7a2f8902a4c11675da3e1b421c6e28d95794fed
    - secure: oHzmcARbCvFobUZhcta11Wbw67NMDW9IXc7QyhbUG7utodbI+Dky7EJdLTZ1m7zpoucEJvR8K6MtAZnkEa0QRz87AqdcHGRZQt4MvwlmSxr4ea9QTyxb7fbmMfBfgWVCOdas3DWC9MQGeZylS1gAisAK7SpMLWRyEJIXFa6G5hqjoYdkZsxco4eE+Yq9n4CkUqlMBZ6ruX8oLuxqXK86sz5fKVjfh9BIsHwWaOPtRs+HyGnetawk0xCqk8ZAhGY7QO65jsy3m9HVvhbiINC8Ti0RSHgWRFDiCYSyQIy039+w0EgTuWStv4tk9K3V4S4Og22zT/tq1gGZoMZw6z+Ttm24eorr4kDMs3Wi2fNDT+32VAkyv/uR9Jp2J17UrSxSa6z1AtX/IAs/i231NVGaI/rmFsmyl9EuYDTbk184WEXnKXm/GGwxanbLW81EKPd1rIbO3zKhxCX3+2MBvr7k0/Dnxf1EFfTppdjz1z+tKbadzQnM/r4hy+DcIboKFit2ix+MBgJ7YPqDnf+MpD7nnLtYPXCmkXMzJ6CS3HP6HUo2slARm4w3cA70j0R8ntVeyrizQH/ddI6E7429Nyr3szEVXysW5iMqO4QvNKqJ7Jlq/LCp9ExAk79Gz3BXevonBQJEuXb3Nsx8psDSjGKjtGuHDxdO1+g14OOqgMkUWVY= # do NOT touch this

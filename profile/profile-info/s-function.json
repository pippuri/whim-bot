{
  "name": "profile-info",
  "runtime": "nodejs4.3",
  "description": "Serverless Lambda function for project: MaaS",
  "customName": false,
  "customRole": false,
  "handler": "handler.handler",
  "timeout": 20,
  "memorySize": 1024,
  "authorizer": {},
  "custom": {},
  "endpoints": [
    {
      "path": "profile",
      "method": "GET",
      "type": "AWS",
      "authorizationType": "CUSTOM",
      "authorizerFunction": "auth-custom-authorizer",
      "apiKeyRequired": true,
      "requestParameters": {},
      "requestTemplates": {
        "application/json": {
          "identityId":"$context.authorizer.principalId",
          "attributes":"$input.params('attributes')"
        }
      },
      "responses": {
        "^400.*": {
          "statusCode": "400"
        },
        "^403.*": {
          "statusCode": "403"
        },
        "^401.*": {
          "statusCode": "401"
        },
        "^404.*": {
          "statusCode": "404"
        },
        "^\\d{3}.*": {
          "statusCode": "500"
        },
        "default": {
          "statusCode": "200",
          "responseModels": {},
          "responseTemplates": {
            "application/json": ""
          }
        }
      },
      "swaggerExport": {
        "summary": "Retrieve an user profile",
        "description": "Retrieve all public information of an user profile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "application/json": {},
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "maas-backend/profile/profile-info/response.json"
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  ],
  "events": [],
  "environment": "$${environment}",
  "vpc": {
    "securityGroupIds": [],
    "subnetIds": []
  }
}

{
  "name": "profile-favoriteLocations-add",
  "runtime": "nodejs4.3",
  "description": "Serverless Lambda function for project: MaaS",
  "customName": false,
  "customRole": false,
  "handler": "handler.handler",
  "timeout": 6,
  "memorySize": 1024,
  "authorizer": {},
  "custom": {
    "excludePatterns": []
  },
  "endpoints": [
    {
      "path": "profile/favorite-locations",
      "method": "POST",
      "type": "AWS",
      "authorizationType": "CUSTOM",
      "authorizerFunction": "auth-custom-authorizer",
      "apiKeyRequired": false,
      "requestParameters": {},
      "requestTemplates": {
        "application/json": "{\"identityId\":\"$context.authorizer.principalId\",\"payload\":{\"name\":$input.json('$.name'), \"address\": $input.json('$.address'), \"lat\":$input.json('$.lat'), \"lon\":$input.json('$.lon')}}"
      },
      "swaggerExport": {
        "summary": "Add an user favorite location",
        "description": "Add an user favorite location to the his/her list",
        "security": [{"Bearer":[]}],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Location that will be added to user's favoriteLocations list",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "$ref": "profile/profile-favoriteLocations-add/request-schema.json#properties"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "application/json": {},
            "description": "Success",
            "schema": {
              "$ref": "profile/profile-favoriteLocations-add/response-schema.json#properties"
            }
          },
          "400": {
            "description": "Invalid Input"
          },
          "401": {
            "description": "Unauthenticated"
          }
        }
      },
      "responses": {
        "^400.*": {
          "statusCode": "400",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
         "^403.*": {
          "statusCode": "403",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
        "^401.*": {
          "statusCode": "401",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
        "^404.*": {
          "statusCode": "404",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
        "[^0-9].*": {
          "statusCode": "500",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          }
        },
        "default": {
          "statusCode": "200",
          "responseParameters": {
            "method.response.header.Access-Control-Allow-Origin": "'*'"
          },
          "responseModels": {},
          "responseTemplates": {
            "application/json": ""
          }
        }
      }
    }
  ],
  "events": [],
  "environment": "$${environment}"
}
